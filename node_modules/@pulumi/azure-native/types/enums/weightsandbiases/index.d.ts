import * as v20240918preview from "./v20240918preview";
export { v20240918preview, };
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const Region: {
    /**
     * Region: East US
     */
    readonly Eastus: "eastus";
    /**
     * Region: Central US
     */
    readonly Centralus: "centralus";
    /**
     * Region: West US
     */
    readonly Westus: "westus";
    /**
     * Region: West Europe
     */
    readonly Westeurope: "westeurope";
    /**
     * Region: Japan East
     */
    readonly Japaneast: "japaneast";
    /**
     * Region: Korea Central
     */
    readonly Koreacentral: "koreacentral";
};
/**
 * The region of the instance
 */
export type Region = (typeof Region)[keyof typeof Region];
export declare const SingleSignOnStates: {
    /**
     * Initial state of the SSO resource
     */
    readonly Initial: "Initial";
    /**
     * State of the SSO resource when it is enabled
     */
    readonly Enable: "Enable";
    /**
     * State of the SSO resource when it is disabled
     */
    readonly Disable: "Disable";
};
/**
 * State of the Single Sign On for the resource
 */
export type SingleSignOnStates = (typeof SingleSignOnStates)[keyof typeof SingleSignOnStates];
export declare const SingleSignOnType: {
    /**
     * Security Assertion Markup Language (SAML) based Single Sign-On
     */
    readonly Saml: "Saml";
    /**
     * OpenID Connect based Single Sign-On.
     */
    readonly OpenId: "OpenId";
};
/**
 * Type of Single Sign-On mechanism being used
 */
export type SingleSignOnType = (typeof SingleSignOnType)[keyof typeof SingleSignOnType];
