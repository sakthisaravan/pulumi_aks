"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.connectedcache = exports.confluent = exports.config = exports.confidentialledger = exports.compute = exports.community = exports.communication = exports.cognitiveservices = exports.codesigning = exports.cloudngfw = exports.chaos = exports.changeanalysis = exports.certificateregistration = exports.cdn = exports.cache = exports.botservice = exports.blueprint = exports.billing = exports.batch = exports.baremetalinfrastructure = exports.azurestackhci = exports.azurestack = exports.azuresphere = exports.azureplaywrightservice = exports.azurelargeinstance = exports.azurefleet = exports.azuredatatransfer = exports.azuredata = exports.azurearcdata = exports.azureactivedirectory = exports.awsconnector = exports.avs = exports.automation = exports.automanage = exports.authorization = exports.attestation = exports.appplatform = exports.appconfiguration = exports.appcomplianceautomation = exports.app = exports.apimanagement = exports.apicenter = exports.analysisservices = exports.alertsmanagement = exports.agfoodplatform = exports.advisor = exports.addons = exports.aadiam = exports.aad = exports.Provider = void 0;
exports.engagementfabric = exports.elasticsan = exports.elastic = exports.education = exports.edgeorder = exports.edgemarketplace = exports.edge = exports.easm = exports.dynamics365fraudprotection = exports.durabletask = exports.domainregistration = exports.documentdb = exports.digitaltwins = exports.devtestlab = exports.devspaces = exports.devopsinfrastructure = exports.deviceupdate = exports.devices = exports.deviceregistry = exports.devhub = exports.devcenter = exports.desktopvirtualization = exports.delegatednetwork = exports.dbforpostgresql = exports.dbformysql = exports.dbformariadb = exports.datashare = exports.datareplication = exports.dataprotection = exports.datamigration = exports.datalakestore = exports.datalakeanalytics = exports.datafactory = exports.datadog = exports.datacatalog = exports.databricks = exports.databoxedge = exports.databox = exports.databasewatcher = exports.dashboard = exports.customproviders = exports.customerinsights = exports.costmanagement = exports.contoso = exports.containerstorage = exports.containerservice = exports.containerregistry = exports.containerinstance = exports.consumption = exports.connectedvmwarevsphere = void 0;
exports.managementpartner = exports.management = exports.managedservices = exports.managednetworkfabric = exports.managednetwork = exports.managedidentity = exports.maintenance = exports.machinelearningservices = exports.machinelearning = exports.m365securityandcompliance = exports.logz = exports.logic = exports.loadtestservice = exports.labservices = exports.kusto = exports.kubernetesruntime = exports.kubernetesconfiguration = exports.kubernetes = exports.keyvault = exports.iotoperationsorchestrator = exports.iotoperationsmq = exports.iotoperationsdataprocessor = exports.iotoperations = exports.iotfirmwaredefense = exports.iotcentral = exports.intune = exports.integrationspaces = exports.insights = exports.importexport = exports.impact = exports.hybridnetwork = exports.hybriddata = exports.hybridcontainerservice = exports.hybridconnectivity = exports.hybridcompute = exports.hybridcloud = exports.healthdataaiservices = exports.healthcareapis = exports.healthbot = exports.hdinsight = exports.hardwaresecuritymodules = exports.guestconfiguration = exports.graphservices = exports.fluidrelay = exports.features = exports.fabric = exports.extendedlocation = exports.eventhub = exports.eventgrid = exports.enterpriseknowledgegraph = void 0;
exports.servicebus = exports.serialconsole = exports.securityinsights = exports.securityandcompliance = exports.security = exports.secretsynccontroller = exports.search = exports.scvmm = exports.scom = exports.scheduler = exports.saas = exports.resources = exports.resourcehealth = exports.resourcegraph = exports.resourceconnector = exports.relay = exports.redhatopenshift = exports.recoveryservices = exports.recommendationsservice = exports.quota = exports.quantum = exports.purview = exports.providerhub = exports.programmableconnectivity = exports.professionalservice = exports.powerplatform = exports.powerbidedicated = exports.powerbi = exports.portalservices = exports.portal = exports.policyinsights = exports.peering = exports.orbital = exports.operationsmanagement = exports.operationalinsights = exports.openenergyplatform = exports.offazurespringboot = exports.offazure = exports.notificationhubs = exports.networkfunction = exports.networkcloud = exports.network = exports.netapp = exports.monitor = exports.mobilenetwork = exports.mixedreality = exports.migrate = exports.media = exports.marketplace = exports.maps = void 0;
exports.workloads = exports.windowsiot = exports.windowsesu = exports.weightsandbiases = exports.webpubsub = exports.web = exports.voiceservices = exports.vmwarecloudsimple = exports.visualstudio = exports.virtualmachineimages = exports.videoindexer = exports.videoanalyzer = exports.verifiedid = exports.types = exports.timeseriesinsights = exports.testbase = exports.syntex = exports.synapse = exports.subscription = exports.streamanalytics = exports.storsimple = exports.storagesync = exports.storagepool = exports.storagemover = exports.storagecache = exports.storageactions = exports.storage = exports.standbypool = exports.sqlvirtualmachine = exports.sql = exports.sovereign = exports.solutions = exports.softwareplan = exports.signalrservice = exports.servicenetworking = exports.servicelinker = exports.servicefabricmesh = exports.servicefabric = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.Provider = null;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));
// Export sub-modules:
const aad = require("./aad");
exports.aad = aad;
const aadiam = require("./aadiam");
exports.aadiam = aadiam;
const addons = require("./addons");
exports.addons = addons;
const advisor = require("./advisor");
exports.advisor = advisor;
const agfoodplatform = require("./agfoodplatform");
exports.agfoodplatform = agfoodplatform;
const alertsmanagement = require("./alertsmanagement");
exports.alertsmanagement = alertsmanagement;
const analysisservices = require("./analysisservices");
exports.analysisservices = analysisservices;
const apicenter = require("./apicenter");
exports.apicenter = apicenter;
const apimanagement = require("./apimanagement");
exports.apimanagement = apimanagement;
const app = require("./app");
exports.app = app;
const appcomplianceautomation = require("./appcomplianceautomation");
exports.appcomplianceautomation = appcomplianceautomation;
const appconfiguration = require("./appconfiguration");
exports.appconfiguration = appconfiguration;
const appplatform = require("./appplatform");
exports.appplatform = appplatform;
const attestation = require("./attestation");
exports.attestation = attestation;
const authorization = require("./authorization");
exports.authorization = authorization;
const automanage = require("./automanage");
exports.automanage = automanage;
const automation = require("./automation");
exports.automation = automation;
const avs = require("./avs");
exports.avs = avs;
const awsconnector = require("./awsconnector");
exports.awsconnector = awsconnector;
const azureactivedirectory = require("./azureactivedirectory");
exports.azureactivedirectory = azureactivedirectory;
const azurearcdata = require("./azurearcdata");
exports.azurearcdata = azurearcdata;
const azuredata = require("./azuredata");
exports.azuredata = azuredata;
const azuredatatransfer = require("./azuredatatransfer");
exports.azuredatatransfer = azuredatatransfer;
const azurefleet = require("./azurefleet");
exports.azurefleet = azurefleet;
const azurelargeinstance = require("./azurelargeinstance");
exports.azurelargeinstance = azurelargeinstance;
const azureplaywrightservice = require("./azureplaywrightservice");
exports.azureplaywrightservice = azureplaywrightservice;
const azuresphere = require("./azuresphere");
exports.azuresphere = azuresphere;
const azurestack = require("./azurestack");
exports.azurestack = azurestack;
const azurestackhci = require("./azurestackhci");
exports.azurestackhci = azurestackhci;
const baremetalinfrastructure = require("./baremetalinfrastructure");
exports.baremetalinfrastructure = baremetalinfrastructure;
const batch = require("./batch");
exports.batch = batch;
const billing = require("./billing");
exports.billing = billing;
const blueprint = require("./blueprint");
exports.blueprint = blueprint;
const botservice = require("./botservice");
exports.botservice = botservice;
const cache = require("./cache");
exports.cache = cache;
const cdn = require("./cdn");
exports.cdn = cdn;
const certificateregistration = require("./certificateregistration");
exports.certificateregistration = certificateregistration;
const changeanalysis = require("./changeanalysis");
exports.changeanalysis = changeanalysis;
const chaos = require("./chaos");
exports.chaos = chaos;
const cloudngfw = require("./cloudngfw");
exports.cloudngfw = cloudngfw;
const codesigning = require("./codesigning");
exports.codesigning = codesigning;
const cognitiveservices = require("./cognitiveservices");
exports.cognitiveservices = cognitiveservices;
const communication = require("./communication");
exports.communication = communication;
const community = require("./community");
exports.community = community;
const compute = require("./compute");
exports.compute = compute;
const confidentialledger = require("./confidentialledger");
exports.confidentialledger = confidentialledger;
const config = require("./config");
exports.config = config;
const confluent = require("./confluent");
exports.confluent = confluent;
const connectedcache = require("./connectedcache");
exports.connectedcache = connectedcache;
const connectedvmwarevsphere = require("./connectedvmwarevsphere");
exports.connectedvmwarevsphere = connectedvmwarevsphere;
const consumption = require("./consumption");
exports.consumption = consumption;
const containerinstance = require("./containerinstance");
exports.containerinstance = containerinstance;
const containerregistry = require("./containerregistry");
exports.containerregistry = containerregistry;
const containerservice = require("./containerservice");
exports.containerservice = containerservice;
const containerstorage = require("./containerstorage");
exports.containerstorage = containerstorage;
const contoso = require("./contoso");
exports.contoso = contoso;
const costmanagement = require("./costmanagement");
exports.costmanagement = costmanagement;
const customerinsights = require("./customerinsights");
exports.customerinsights = customerinsights;
const customproviders = require("./customproviders");
exports.customproviders = customproviders;
const dashboard = require("./dashboard");
exports.dashboard = dashboard;
const databasewatcher = require("./databasewatcher");
exports.databasewatcher = databasewatcher;
const databox = require("./databox");
exports.databox = databox;
const databoxedge = require("./databoxedge");
exports.databoxedge = databoxedge;
const databricks = require("./databricks");
exports.databricks = databricks;
const datacatalog = require("./datacatalog");
exports.datacatalog = datacatalog;
const datadog = require("./datadog");
exports.datadog = datadog;
const datafactory = require("./datafactory");
exports.datafactory = datafactory;
const datalakeanalytics = require("./datalakeanalytics");
exports.datalakeanalytics = datalakeanalytics;
const datalakestore = require("./datalakestore");
exports.datalakestore = datalakestore;
const datamigration = require("./datamigration");
exports.datamigration = datamigration;
const dataprotection = require("./dataprotection");
exports.dataprotection = dataprotection;
const datareplication = require("./datareplication");
exports.datareplication = datareplication;
const datashare = require("./datashare");
exports.datashare = datashare;
const dbformariadb = require("./dbformariadb");
exports.dbformariadb = dbformariadb;
const dbformysql = require("./dbformysql");
exports.dbformysql = dbformysql;
const dbforpostgresql = require("./dbforpostgresql");
exports.dbforpostgresql = dbforpostgresql;
const delegatednetwork = require("./delegatednetwork");
exports.delegatednetwork = delegatednetwork;
const desktopvirtualization = require("./desktopvirtualization");
exports.desktopvirtualization = desktopvirtualization;
const devcenter = require("./devcenter");
exports.devcenter = devcenter;
const devhub = require("./devhub");
exports.devhub = devhub;
const deviceregistry = require("./deviceregistry");
exports.deviceregistry = deviceregistry;
const devices = require("./devices");
exports.devices = devices;
const deviceupdate = require("./deviceupdate");
exports.deviceupdate = deviceupdate;
const devopsinfrastructure = require("./devopsinfrastructure");
exports.devopsinfrastructure = devopsinfrastructure;
const devspaces = require("./devspaces");
exports.devspaces = devspaces;
const devtestlab = require("./devtestlab");
exports.devtestlab = devtestlab;
const digitaltwins = require("./digitaltwins");
exports.digitaltwins = digitaltwins;
const documentdb = require("./documentdb");
exports.documentdb = documentdb;
const domainregistration = require("./domainregistration");
exports.domainregistration = domainregistration;
const durabletask = require("./durabletask");
exports.durabletask = durabletask;
const dynamics365fraudprotection = require("./dynamics365fraudprotection");
exports.dynamics365fraudprotection = dynamics365fraudprotection;
const easm = require("./easm");
exports.easm = easm;
const edge = require("./edge");
exports.edge = edge;
const edgemarketplace = require("./edgemarketplace");
exports.edgemarketplace = edgemarketplace;
const edgeorder = require("./edgeorder");
exports.edgeorder = edgeorder;
const education = require("./education");
exports.education = education;
const elastic = require("./elastic");
exports.elastic = elastic;
const elasticsan = require("./elasticsan");
exports.elasticsan = elasticsan;
const engagementfabric = require("./engagementfabric");
exports.engagementfabric = engagementfabric;
const enterpriseknowledgegraph = require("./enterpriseknowledgegraph");
exports.enterpriseknowledgegraph = enterpriseknowledgegraph;
const eventgrid = require("./eventgrid");
exports.eventgrid = eventgrid;
const eventhub = require("./eventhub");
exports.eventhub = eventhub;
const extendedlocation = require("./extendedlocation");
exports.extendedlocation = extendedlocation;
const fabric = require("./fabric");
exports.fabric = fabric;
const features = require("./features");
exports.features = features;
const fluidrelay = require("./fluidrelay");
exports.fluidrelay = fluidrelay;
const graphservices = require("./graphservices");
exports.graphservices = graphservices;
const guestconfiguration = require("./guestconfiguration");
exports.guestconfiguration = guestconfiguration;
const hardwaresecuritymodules = require("./hardwaresecuritymodules");
exports.hardwaresecuritymodules = hardwaresecuritymodules;
const hdinsight = require("./hdinsight");
exports.hdinsight = hdinsight;
const healthbot = require("./healthbot");
exports.healthbot = healthbot;
const healthcareapis = require("./healthcareapis");
exports.healthcareapis = healthcareapis;
const healthdataaiservices = require("./healthdataaiservices");
exports.healthdataaiservices = healthdataaiservices;
const hybridcloud = require("./hybridcloud");
exports.hybridcloud = hybridcloud;
const hybridcompute = require("./hybridcompute");
exports.hybridcompute = hybridcompute;
const hybridconnectivity = require("./hybridconnectivity");
exports.hybridconnectivity = hybridconnectivity;
const hybridcontainerservice = require("./hybridcontainerservice");
exports.hybridcontainerservice = hybridcontainerservice;
const hybriddata = require("./hybriddata");
exports.hybriddata = hybriddata;
const hybridnetwork = require("./hybridnetwork");
exports.hybridnetwork = hybridnetwork;
const impact = require("./impact");
exports.impact = impact;
const importexport = require("./importexport");
exports.importexport = importexport;
const insights = require("./insights");
exports.insights = insights;
const integrationspaces = require("./integrationspaces");
exports.integrationspaces = integrationspaces;
const intune = require("./intune");
exports.intune = intune;
const iotcentral = require("./iotcentral");
exports.iotcentral = iotcentral;
const iotfirmwaredefense = require("./iotfirmwaredefense");
exports.iotfirmwaredefense = iotfirmwaredefense;
const iotoperations = require("./iotoperations");
exports.iotoperations = iotoperations;
const iotoperationsdataprocessor = require("./iotoperationsdataprocessor");
exports.iotoperationsdataprocessor = iotoperationsdataprocessor;
const iotoperationsmq = require("./iotoperationsmq");
exports.iotoperationsmq = iotoperationsmq;
const iotoperationsorchestrator = require("./iotoperationsorchestrator");
exports.iotoperationsorchestrator = iotoperationsorchestrator;
const keyvault = require("./keyvault");
exports.keyvault = keyvault;
const kubernetes = require("./kubernetes");
exports.kubernetes = kubernetes;
const kubernetesconfiguration = require("./kubernetesconfiguration");
exports.kubernetesconfiguration = kubernetesconfiguration;
const kubernetesruntime = require("./kubernetesruntime");
exports.kubernetesruntime = kubernetesruntime;
const kusto = require("./kusto");
exports.kusto = kusto;
const labservices = require("./labservices");
exports.labservices = labservices;
const loadtestservice = require("./loadtestservice");
exports.loadtestservice = loadtestservice;
const logic = require("./logic");
exports.logic = logic;
const logz = require("./logz");
exports.logz = logz;
const m365securityandcompliance = require("./m365securityandcompliance");
exports.m365securityandcompliance = m365securityandcompliance;
const machinelearning = require("./machinelearning");
exports.machinelearning = machinelearning;
const machinelearningservices = require("./machinelearningservices");
exports.machinelearningservices = machinelearningservices;
const maintenance = require("./maintenance");
exports.maintenance = maintenance;
const managedidentity = require("./managedidentity");
exports.managedidentity = managedidentity;
const managednetwork = require("./managednetwork");
exports.managednetwork = managednetwork;
const managednetworkfabric = require("./managednetworkfabric");
exports.managednetworkfabric = managednetworkfabric;
const managedservices = require("./managedservices");
exports.managedservices = managedservices;
const management = require("./management");
exports.management = management;
const managementpartner = require("./managementpartner");
exports.managementpartner = managementpartner;
const maps = require("./maps");
exports.maps = maps;
const marketplace = require("./marketplace");
exports.marketplace = marketplace;
const media = require("./media");
exports.media = media;
const migrate = require("./migrate");
exports.migrate = migrate;
const mixedreality = require("./mixedreality");
exports.mixedreality = mixedreality;
const mobilenetwork = require("./mobilenetwork");
exports.mobilenetwork = mobilenetwork;
const monitor = require("./monitor");
exports.monitor = monitor;
const netapp = require("./netapp");
exports.netapp = netapp;
const network = require("./network");
exports.network = network;
const networkcloud = require("./networkcloud");
exports.networkcloud = networkcloud;
const networkfunction = require("./networkfunction");
exports.networkfunction = networkfunction;
const notificationhubs = require("./notificationhubs");
exports.notificationhubs = notificationhubs;
const offazure = require("./offazure");
exports.offazure = offazure;
const offazurespringboot = require("./offazurespringboot");
exports.offazurespringboot = offazurespringboot;
const openenergyplatform = require("./openenergyplatform");
exports.openenergyplatform = openenergyplatform;
const operationalinsights = require("./operationalinsights");
exports.operationalinsights = operationalinsights;
const operationsmanagement = require("./operationsmanagement");
exports.operationsmanagement = operationsmanagement;
const orbital = require("./orbital");
exports.orbital = orbital;
const peering = require("./peering");
exports.peering = peering;
const policyinsights = require("./policyinsights");
exports.policyinsights = policyinsights;
const portal = require("./portal");
exports.portal = portal;
const portalservices = require("./portalservices");
exports.portalservices = portalservices;
const powerbi = require("./powerbi");
exports.powerbi = powerbi;
const powerbidedicated = require("./powerbidedicated");
exports.powerbidedicated = powerbidedicated;
const powerplatform = require("./powerplatform");
exports.powerplatform = powerplatform;
const professionalservice = require("./professionalservice");
exports.professionalservice = professionalservice;
const programmableconnectivity = require("./programmableconnectivity");
exports.programmableconnectivity = programmableconnectivity;
const providerhub = require("./providerhub");
exports.providerhub = providerhub;
const purview = require("./purview");
exports.purview = purview;
const quantum = require("./quantum");
exports.quantum = quantum;
const quota = require("./quota");
exports.quota = quota;
const recommendationsservice = require("./recommendationsservice");
exports.recommendationsservice = recommendationsservice;
const recoveryservices = require("./recoveryservices");
exports.recoveryservices = recoveryservices;
const redhatopenshift = require("./redhatopenshift");
exports.redhatopenshift = redhatopenshift;
const relay = require("./relay");
exports.relay = relay;
const resourceconnector = require("./resourceconnector");
exports.resourceconnector = resourceconnector;
const resourcegraph = require("./resourcegraph");
exports.resourcegraph = resourcegraph;
const resourcehealth = require("./resourcehealth");
exports.resourcehealth = resourcehealth;
const resources = require("./resources");
exports.resources = resources;
const saas = require("./saas");
exports.saas = saas;
const scheduler = require("./scheduler");
exports.scheduler = scheduler;
const scom = require("./scom");
exports.scom = scom;
const scvmm = require("./scvmm");
exports.scvmm = scvmm;
const search = require("./search");
exports.search = search;
const secretsynccontroller = require("./secretsynccontroller");
exports.secretsynccontroller = secretsynccontroller;
const security = require("./security");
exports.security = security;
const securityandcompliance = require("./securityandcompliance");
exports.securityandcompliance = securityandcompliance;
const securityinsights = require("./securityinsights");
exports.securityinsights = securityinsights;
const serialconsole = require("./serialconsole");
exports.serialconsole = serialconsole;
const servicebus = require("./servicebus");
exports.servicebus = servicebus;
const servicefabric = require("./servicefabric");
exports.servicefabric = servicefabric;
const servicefabricmesh = require("./servicefabricmesh");
exports.servicefabricmesh = servicefabricmesh;
const servicelinker = require("./servicelinker");
exports.servicelinker = servicelinker;
const servicenetworking = require("./servicenetworking");
exports.servicenetworking = servicenetworking;
const signalrservice = require("./signalrservice");
exports.signalrservice = signalrservice;
const softwareplan = require("./softwareplan");
exports.softwareplan = softwareplan;
const solutions = require("./solutions");
exports.solutions = solutions;
const sovereign = require("./sovereign");
exports.sovereign = sovereign;
const sql = require("./sql");
exports.sql = sql;
const sqlvirtualmachine = require("./sqlvirtualmachine");
exports.sqlvirtualmachine = sqlvirtualmachine;
const standbypool = require("./standbypool");
exports.standbypool = standbypool;
const storage = require("./storage");
exports.storage = storage;
const storageactions = require("./storageactions");
exports.storageactions = storageactions;
const storagecache = require("./storagecache");
exports.storagecache = storagecache;
const storagemover = require("./storagemover");
exports.storagemover = storagemover;
const storagepool = require("./storagepool");
exports.storagepool = storagepool;
const storagesync = require("./storagesync");
exports.storagesync = storagesync;
const storsimple = require("./storsimple");
exports.storsimple = storsimple;
const streamanalytics = require("./streamanalytics");
exports.streamanalytics = streamanalytics;
const subscription = require("./subscription");
exports.subscription = subscription;
const synapse = require("./synapse");
exports.synapse = synapse;
const syntex = require("./syntex");
exports.syntex = syntex;
const testbase = require("./testbase");
exports.testbase = testbase;
const timeseriesinsights = require("./timeseriesinsights");
exports.timeseriesinsights = timeseriesinsights;
const types = require("./types");
exports.types = types;
const verifiedid = require("./verifiedid");
exports.verifiedid = verifiedid;
const videoanalyzer = require("./videoanalyzer");
exports.videoanalyzer = videoanalyzer;
const videoindexer = require("./videoindexer");
exports.videoindexer = videoindexer;
const virtualmachineimages = require("./virtualmachineimages");
exports.virtualmachineimages = virtualmachineimages;
const visualstudio = require("./visualstudio");
exports.visualstudio = visualstudio;
const vmwarecloudsimple = require("./vmwarecloudsimple");
exports.vmwarecloudsimple = vmwarecloudsimple;
const voiceservices = require("./voiceservices");
exports.voiceservices = voiceservices;
const web = require("./web");
exports.web = web;
const webpubsub = require("./webpubsub");
exports.webpubsub = webpubsub;
const weightsandbiases = require("./weightsandbiases");
exports.weightsandbiases = weightsandbiases;
const windowsesu = require("./windowsesu");
exports.windowsesu = windowsesu;
const windowsiot = require("./windowsiot");
exports.windowsiot = windowsiot;
const workloads = require("./workloads");
exports.workloads = workloads;
pulumi.runtime.registerResourcePackage("azure-native", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:azure-native") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new exports.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=data:application/json;base64,